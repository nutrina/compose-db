type GitcoinPassportStamp
  @createModel(
    accountRelation: LIST
    description: "A gitcoin passport stamp with a provider and hash"
  )
  @createIndex(fields: [{ path: "issuer" }])
  @createIndex(fields: [{ path: "issuanceDate" }])
  @createIndex(fields: [{ path: "expirationDate" }]) {
  _context: [String!]!
    @string(minLength: 1, maxLength: 1024)
    @list(maxLength: 1024)
  type: [String!]! @string(minLength: 1, maxLength: 1024) @list(maxLength: 1024)
  issuer: String! @string(minLength: 1, maxLength: 1024)
  issuanceDate: DateTime!
  expirationDate: DateTime!
  credentialSubject: GitcoinPassportVcCredentialSubject!
  proof: GitcoinPassportVcProof!
}

# type GitcoinPassportVc
#   @createModel(accountRelation: LIST, description: "Gitcoin Passport VC") {
#   issuer: String! @string(minLength: 1, maxLength: 1024)
#   issuanceDate: DateTime!
#   expirationDate: DateTime!
#   type: [String!]! @string(minLength: 1, maxLength: 1024) @list(maxLength: 1024)
#   credentialSubject: GitcoinPassportVcCredentialSubject
# }

# # type GitcoinPassportVc
# #   @createModel(accountRelation: SINGLE, description: "Gitcoin Passport VC") {
# #   "@context": [String!]!
# #   "type": [String!]!
# #   "issuer": String!
# #   "issuanceDate": String!
# #   "expirationDate": String!
# #   credentialSubject: GitcoinPassportVcCredentialSubject!
# #   "proof": GitcoinPassportVcProof?
# # }

type GitcoinPassportVcCredentialSubjectContext {
  hash: String! @string(minLength: 1, maxLength: 1024)
  metaPointer: String! @string(minLength: 1, maxLength: 1024)
  provider: String! @string(minLength: 1, maxLength: 1024)
}

type GitcoinPassportVcCredentialSubject {
  _id: String! @string(minLength: 1, maxLength: 1024)
  provider: String! @string(minLength: 1, maxLength: 1024)
  metaPointer: String! @string(minLength: 1, maxLength: 1024)
  hash: String! @string(minLength: 1, maxLength: 1024)
  _context: GitcoinPassportVcCredentialSubjectContext!
}

type GitcoinPassportVcProof {
  _context: String! @string(minLength: 1, maxLength: 1024)
  type: String! @string(minLength: 1, maxLength: 1024)
  proofPurpose: String! @string(minLength: 1, maxLength: 1024)
  proofValue: String! @string(minLength: 1, maxLength: 1024)
  verificationMethod: String! @string(minLength: 1, maxLength: 1024)
  created: DateTime!
  eip712Domain: EIP712Domain!
}

type EIP712Domain {
  primaryType: String! @string(minLength: 1, maxLength: 1024)
  domain: EIP712DomainDomain!
  types: EIP712DomainTypes!
}

type EIP712ValueType {
  name: String! @string(minLength: 1, maxLength: 1024)
  type: String! @string(minLength: 1, maxLength: 1024)
}

type EIP712DomainDomain {
  # TODO: add optinal fields ...
  name: String! @string(minLength: 1, maxLength: 1024)
}

type EIP712DomainTypes {
  Context: [EIP712ValueType] @list(maxLength: 1024)
  CredentialStatus: [EIP712ValueType] @list(maxLength: 1024)
  CredentialSubject: [EIP712ValueType] @list(maxLength: 1024)
  Document: [EIP712ValueType] @list(maxLength: 1024)
  EIP712Domain: [EIP712ValueType] @list(maxLength: 1024)
  Proof: [EIP712ValueType] @list(maxLength: 1024)
}
