# #### Interfaces ####

interface VerifiableCredentialSubject
  @createModel(description: "A verifiable credential subject interface") {
  _id: String! @string(minLength: 1, maxLength: 1024)
}

interface VerifiableCredentialProof
  @createModel(description: "A verifiable credential proof interface") {
  type: String! @string(minLength: 1, maxLength: 1024)
}

interface VerifiableCredential
  @createModel(description: "A verifiable credential interface") {
  type: [String!]! @string(minLength: 1, maxLength: 1024) @list(maxLength: 1024)
  issuer: String! @string(minLength: 1, maxLength: 1024)
  issuanceDate: DateTime!
  expirationDate: DateTime!
}

# #### Top Level - Claim (Attestation / VC) ####

interface GitcoinPassportStamp
  @createModel(description: "A verifiable claim interface") {
  # controller: DID! @documentAccount
  # recipient: DID! @accountReference
  controller: String! @string(minLength: 1, maxLength: 1024)
  recipient: String! @string(minLength: 1, maxLength: 1024)
}

type PassportVerifiableClaimBinary implements GitcoinPassportStamp
  @createModel(
    accountRelation: LIST
    description: "A gitcoin passport stamp with a provider and hash"
  ) {
  # controller: DID! @documentAccount
  controller: String! @string(minLength: 1, maxLength: 1024)
  recipient: String! @string(minLength: 1, maxLength: 1024)
}

type PassportVerifiableClaimProbabilistic implements GitcoinPassportStamp
  @createModel(
    accountRelation: LIST
    description: "A gitcoin passport stamp with a provider and hash"
  )
  # @createIndex(fields: [{ path: "controller" }]) 
  @createIndex(fields: [{ path: ["controller"] }]) 
  # controller: DID! @documentAccount
  {
  controller: String! @string(minLength: 1, maxLength: 1024)
  recipient: String! @string(minLength: 1, maxLength: 1024)
  attestation: GitcoinPassportVerifiableCredentialBinary!
}

# #### Passport Stamp ####

type GitcoinPassportVcCredentialSubjectContext {
  hash: String! @string(minLength: 1, maxLength: 1024)
  metaPointer: String! @string(minLength: 1, maxLength: 1024)
  provider: String! @string(minLength: 1, maxLength: 1024)
}

type GitcoinPassportVcCredentialSubject implements VerifiableCredentialSubject {
  _id: String! @string(minLength: 1, maxLength: 1024)
  provider: String! @string(minLength: 1, maxLength: 1024)
  metaPointer: String! @string(minLength: 1, maxLength: 1024)
  hash: String! @string(minLength: 1, maxLength: 1024)
  _context: GitcoinPassportVcCredentialSubjectContext!
}

type GitcoinPassportVerifiableCredentialBinary implements VerifiableCredential {
  # @createModel(
  #   accountRelation: LIST
  #   description: "A gitcoin passport stamp with a provider and hash"
  # )
  # @createIndex(fields: [{ path: "issuer" }])
  # @createIndex(fields: [{ path: "issuanceDate" }])
  # @createIndex(fields: [{ path: "expirationDate" }]) {
  _context: [String!]!
    @string(minLength: 1, maxLength: 1024)
    @list(maxLength: 1024)
  type: [String!]! @string(minLength: 1, maxLength: 1024) @list(maxLength: 1024)
  issuer: String! @string(minLength: 1, maxLength: 1024)
  issuanceDate: DateTime!
  expirationDate: DateTime!
  credentialSubject: GitcoinPassportVcCredentialSubject!
  proof: GitcoinPassportVcProof!
}

type GitcoinPassportVcProof {
  _context: String! @string(minLength: 1, maxLength: 1024)
  type: String! @string(minLength: 1, maxLength: 1024)
  proofPurpose: String! @string(minLength: 1, maxLength: 1024)
  proofValue: String! @string(minLength: 1, maxLength: 1024)
  verificationMethod: String! @string(minLength: 1, maxLength: 1024)
  created: DateTime!
  eip712Domain: EIP712Domain!
}

type EIP712Domain {
  primaryType: String! @string(minLength: 1, maxLength: 1024)
  domain: EIP712DomainDomain!
  types: EIP712DomainTypes!
}

type EIP712ValueType {
  name: String! @string(minLength: 1, maxLength: 1024)
  type: String! @string(minLength: 1, maxLength: 1024)
}

type EIP712DomainDomain {
  # TODO: add optinal fields ...
  name: String! @string(minLength: 1, maxLength: 1024)
}

type EIP712DomainTypes {
  Context: [EIP712ValueType] @list(maxLength: 1024)
  CredentialStatus: [EIP712ValueType] @list(maxLength: 1024)
  CredentialSubject: [EIP712ValueType] @list(maxLength: 1024)
  Document: [EIP712ValueType] @list(maxLength: 1024)
  EIP712Domain: [EIP712ValueType] @list(maxLength: 1024)
  Proof: [EIP712ValueType] @list(maxLength: 1024)
}
